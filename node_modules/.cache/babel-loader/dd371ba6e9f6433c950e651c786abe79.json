{"remainingRequest":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\babel-loader\\lib\\index.js!D:\\forward\\code\\vue\\hmtt_nnew\\src\\api\\index.js","dependencies":[{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\src\\api\\index.js","mtime":1664882634720},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\babel.config.js","mtime":1664795892678},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664795348110},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\babel-loader\\lib\\index.js","mtime":1663989856865}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0LmpzJzsKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL3Rva2VuLmpzJzsgLy8g55m75b2VCi8vIGF4aW9z5YaF6YOo77yM5Lya5oqK5Y+C5pWw5a+56LGh6L2s5o2i5oiQanNvbuWtl+espuS4suagvOW8j+WPkeWQjuWPsO+8jOS8muiHquWKqOWcqOivt+axguWktOmHjOa3u+WKoCBjb250ZW50LVR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJwoKZXhwb3J0IGNvbnN0IGxvZ2luQVBJID0gKHsKICBtb2JpbGUsCiAgY29kZQp9KSA9PiByZXF1ZXN0KHsKICB1cmw6ICcvdjFfMC9hdXRob3JpemF0aW9ucycsCiAgbWV0aG9kOiAnUE9TVCcsCiAgZGF0YTogewogICAgbW9iaWxlLAogICAgY29kZQogIH0KfSk7IC8vIOiOt+WPlueUqOaIt+mAieaLqeeahOmikemBkwovLyDmsqHnmbvpmYbnmoTvvIzpu5jorqTov5Tlm57lkI7lj7Dorr7nva7nmoTpu5jorqTpopHpgZPliJfooagKCmV4cG9ydCBjb25zdCBnZXRVc2VyQ2hhbm5lbHNBUEkgPSAoKSA9PiByZXF1ZXN0KHsKICB1cmw6ICcvdjFfMC91c2VyL2NoYW5uZWxzJywKICBoZWFkZXJzOiB7CiAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7Z2V0VG9rZW4oKX1gCiAgfQp9KTsgLy8g6I635Y+W5paH56ug5YiX6KGoCgpleHBvcnQgY29uc3QgZ2V0QWxsQXJ0aWNsZUFQSSA9ICh7CiAgY2hhbm5lbF9pZCwKICB0aW1lc3RhbXAKfSkgPT4gcmVxdWVzdCh7CiAgdXJsOiAnL3YxXzAvYXJ0aWNsZXMnLAogIG1ldGhvZDogJ0dFVCcsCiAgaGVhZGVyczogewogICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2dldFRva2VuKCl9YAogIH0sCiAgcGFyYW1zOiB7CiAgICAvL+i/memHjOeahOWPguaVsO+8jGF4aW9z5Lya6Ieq5Yqo5biu5ou85o6l5ZyodXJs77yf5ZCO6Z2iICjmn6Xor6LlrZfnrKbkuLLor7fmsYLvvJtxdWVyeSkKICAgIGNoYW5uZWxfaWQsCiAgICB0aW1lc3RhbXAKICB9Cn0pOw=="},{"version":3,"names":["request","getToken","loginAPI","mobile","code","url","method","data","getUserChannelsAPI","headers","Authorization","getAllArticleAPI","channel_id","timestamp","params"],"sources":["D:/forward/code/vue/hmtt_nnew/src/api/index.js"],"sourcesContent":["import request from '@/utils/request.js'\r\nimport { getToken } from '@/utils/token.js'\r\n\r\n// 登录\r\n// axios内部，会把参数对象转换成json字符串格式发后台，会自动在请求头里添加 content-Type: 'application/json'\r\n\r\nexport const loginAPI = ({ mobile, code }) => request({\r\n    url: '/v1_0/authorizations',\r\n    method: 'POST',\r\n    data: {\r\n        mobile,\r\n        code\r\n    }\r\n})\r\n\r\n// 获取用户选择的频道\r\n// 没登陆的，默认返回后台设置的默认频道列表\r\nexport const getUserChannelsAPI = () => request({\r\n    url: '/v1_0/user/channels',\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    }\r\n})\r\n\r\n// 获取文章列表\r\nexport const getAllArticleAPI = ({ channel_id, timestamp }) => request({\r\n    url: '/v1_0/articles',\r\n    method: 'GET',\r\n    headers: {\r\n        Authorization: `Bearer ${getToken()}`\r\n    },\r\n    params: { //这里的参数，axios会自动帮拼接在url？后面 (查询字符串请求；query)\r\n        channel_id,\r\n        timestamp\r\n    }\r\n\r\n})"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;EAAEC,MAAF;EAAUC;AAAV,CAAD,KAAsBJ,OAAO,CAAC;EAClDK,GAAG,EAAE,sBAD6C;EAElDC,MAAM,EAAE,MAF0C;EAGlDC,IAAI,EAAE;IACFJ,MADE;IAEFC;EAFE;AAH4C,CAAD,CAA9C,C,CASP;AACA;;AACA,OAAO,MAAMI,kBAAkB,GAAG,MAAMR,OAAO,CAAC;EAC5CK,GAAG,EAAE,qBADuC;EAE5CI,OAAO,EAAE;IACLC,aAAa,EAAG,UAAST,QAAQ,EAAG;EAD/B;AAFmC,CAAD,CAAxC,C,CAOP;;AACA,OAAO,MAAMU,gBAAgB,GAAG,CAAC;EAAEC,UAAF;EAAcC;AAAd,CAAD,KAA+Bb,OAAO,CAAC;EACnEK,GAAG,EAAE,gBAD8D;EAEnEC,MAAM,EAAE,KAF2D;EAGnEG,OAAO,EAAE;IACLC,aAAa,EAAG,UAAST,QAAQ,EAAG;EAD/B,CAH0D;EAMnEa,MAAM,EAAE;IAAE;IACNF,UADI;IAEJC;EAFI;AAN2D,CAAD,CAA/D"}]}