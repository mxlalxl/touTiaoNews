{"remainingRequest":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\babel-loader\\lib\\index.js!D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\forward\\code\\vue\\hmtt_nnew\\src\\views\\Home\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\src\\views\\Home\\index.vue","mtime":1666680537158},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\babel.config.js","mtime":1664795892678},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664795348110},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\babel-loader\\lib\\index.js","mtime":1663989856865},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664795348110},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\vue-loader\\lib\\index.js","mtime":1664795355419}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJ2YW50L2VzL25vdGlmeS9zdHlsZS9sZXNzIjsKaW1wb3J0IF9Ob3RpZnkgZnJvbSAidmFudC9lcy9ub3RpZnkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0IHsgZ2V0VXNlckNoYW5uZWxzQVBJLCBnZXRBbGxDaGFubmVsTGlzdEFQSSwgdXBkYXRlQ2hhbm5lbHNBUEksIHJlbW92ZVRoZUNoYW5uZWxBUEkgfSBmcm9tICJAL2FwaSI7CmltcG9ydCBBcnRpY2xlTGlzdCBmcm9tICIuL2NvbXBvbmVudHMvQXJ0aWNsZUxpc3QudnVlIjsKaW1wb3J0IGNoYW5uZWxFZGl0IGZyb20gIi4vY2hhbm5lbEVkaXQudnVlIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFubmVsSWQ6IDAsCiAgICAgIHVzZXJDaGFubmVsTGlzdDogW10sCiAgICAgIGFsbENoYW5uZWxMaXN0OiBbXSwKICAgICAgc2hvdzogZmFsc2UgLy/mjqfliLbpopHpgZPlvLnlh7rlsYLmmL7npLrmiJbpmpDol48KICAgICAgLy8gYXJ0aWNsZUxpc3Q6IFtdCgogICAgfTsKICB9LAoKICBhc3luYyBjcmVhdGVkKCkgewogICAgY29uc3QgcmVzID0gYXdhaXQgZ2V0VXNlckNoYW5uZWxzQVBJKCk7IC8vIGNvbnNvbGUubG9nKHJlcyk7CgogICAgdGhpcy51c2VyQ2hhbm5lbExpc3QgPSByZXMuZGF0YS5kYXRhLmNoYW5uZWxzOwogICAgY29uc3QgcmVzMiA9IGF3YWl0IGdldEFsbENoYW5uZWxMaXN0QVBJKCk7IC8vIGNvbnNvbGUubG9nKHJlczIpOwoKICAgIHRoaXMuYWxsQ2hhbm5lbExpc3QgPSByZXMyLmRhdGEuZGF0YS5jaGFubmVsczsgLy8gY29uc29sZS5sb2codGhpcy5hbGxDaGFubmVsTGlzdCk7CiAgICAvLyDor7fmsYLmlofnq6DliJfooagKICAgIC8vIHRoaXMuY2hhbm5lbENoYW5nZUZuKCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgY2hhbm5lbENoYW5nZUZuKCkgey8vIGNvbnN0IHJlczIgPSBhd2FpdCBnZXRBbGxBcnRpY2xlQVBJKHsKICAgICAgLy8gICBjaGFubmVsX2lkOiB0aGlzLmNoYW5uZWxJZCwKICAgICAgLy8gICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpCiAgICAgIC8vIH0pOwogICAgICAvLyAvLyBjb25zb2xlLmxvZyhyZXMyKTsKICAgICAgLy8gdGhpcy5hcnRpY2xlTGlzdCA9IHJlczIuZGF0YS5kYXRhLnJlc3VsdHM7CiAgICB9LAoKICAgIHBsdXNDbGlja0ZuKCkgewogICAgICB0aGlzLnNob3cgPSB0cnVlOwogICAgfSwKCiAgICAvLyDmt7vliqDpopHpgZMKICAgIGFzeW5jIGFkZENoYW5uZWxGbihjaGFubmVsT2JqKSB7CiAgICAgIHRoaXMudXNlckNoYW5uZWxMaXN0LnB1c2goY2hhbm5lbE9iaik7CiAgICAgIGNvbnN0IG5ld0FyciA9IHRoaXMudXNlckNoYW5uZWxMaXN0LmZpbHRlcihvYmogPT4gb2JqLmlkICE9PSAwKTsKICAgICAgY29uc3QgdGhlTmV3QXJyID0gbmV3QXJyLm1hcCgob2JqLCBpbmRleCkgPT4gewogICAgICAgIGNvbnN0IG5ld09iaiA9IHsgLi4ub2JqCiAgICAgICAgfTsgLy/mi7fotJ0KCiAgICAgICAgZGVsZXRlIG5ld09iai5uYW1lOwogICAgICAgIG5ld09iai5zZXEgPSBpbmRleDsKICAgICAgICByZXR1cm4gbmV3T2JqOyAvL+iuqW1hcOaKiuaWsOWvueixoeaUtumbhui1t+adpQogICAgICB9KTsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgdXBkYXRlQ2hhbm5lbHNBUEkoewogICAgICAgIGNoYW5uZWxzOiB0aGVOZXdBcnIKICAgICAgfSk7CiAgICB9LAoKICAgIC8v55So5oi356e76Zmk5bey6YCJ6aKR6YGTCiAgICBhc3luYyByZW1vdmVDaGFubmVsRm4oY2hhbm5lbE9iaikgewogICAgICBjb25zdCBpbmRleCA9IHRoaXMudXNlckNoYW5uZWxMaXN0LmZpbmRJbmRleChvYmogPT4gb2JqLmlkID09PSBjaGFubmVsT2JqLmlkKTsKICAgICAgdGhpcy51c2VyQ2hhbm5lbExpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgcmVtb3ZlVGhlQ2hhbm5lbEFQSSh7CiAgICAgICAgY2hhbm5lbElkOiBjaGFubmVsT2JqLmlkCiAgICAgIH0pOwoKICAgICAgX05vdGlmeSh7CiAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgIG1lc3NhZ2U6ICLliKDpmaTmiJDlip8iCiAgICAgIH0pOwogICAgfSwKCiAgICAvLyDlhbPpl63lvLnlh7rlsYIKICAgIGNsb3NlRm4oKSB7CiAgICAgIHRoaXMuc2hvdyA9IGZhbHNlOwogICAgICB0aGlzLiRyZWZzLmVkaXRSZWYuaXNFZGl0ID0gZmFsc2U7CiAgICB9LAoKICAgIC8vIOmmlumhtS3lj7PkuIrop5LmlL7lpKfplZzngrnlh7vkuovku7YtLT4g6Lez6L2s6Iez5pCc57Si6aG16Z2iCiAgICBtb3ZlU2VhcmNoUGFnZUZuKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL3NlYXJjaCIpOwogICAgfQoKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEFydGljbGVMaXN0LAogICAgY2hhbm5lbEVkaXQKICB9LAogIGNvbXB1dGVkOiB7CiAgICB1bkNoZWNrQ2hhbm5lbExpc3QoKSB7CiAgICAgIC8vIOaKiuaJgOaciemikemBk+WIl+ihqOaVsOe7hOWvueixoeaMqOS4quWPluWHuu+8jOWOu+eUqOaIt+W3sumAiemikemBk+aVsOe7hOmHjOafpeaJvu+8jOWmguaenOafpeS4jeWIsO+8jOiuqWZpbHRlcuaWueazleWwhuWFtuaUtumbhuWIsOS4gOS4quaWsOeahOaVsOe7hOS4rQogICAgICBjb25zdCBuZXdBcnIgPSB0aGlzLmFsbENoYW5uZWxMaXN0LmZpbHRlcihiaWdPYmogPT4gewogICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy51c2VyQ2hhbm5lbExpc3QuZmluZEluZGV4KHNtYWxsT2JqID0+IHsKICAgICAgICAgIHJldHVybiBzbWFsbE9iai5pZCA9PT0gYmlnT2JqLmlkOwogICAgICAgIH0pOyAvLyDlpoLmnpzmib7liLDkuoYKCiAgICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld0FycjsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"mappings":";;;AAgDA,SACAA,kBADA,EAEAC,oBAFA,EAGAC,iBAHA,EAIAC,mBAJA,QAKA,OALA;AAMA;AACA;AAEA;EACAC;IACA;MACAC,YADA;MAEAC,mBAFA;MAGAC,kBAHA;MAIAC,WAJA,CAIA;MACA;;IALA;EAOA,CATA;;EAUA;IACA,uCADA,CAEA;;IACA;IAEA,0CALA,CAMA;;IACA,8CAPA,CAQA;IAEA;IACA;EACA,CAtBA;;EAuBAC;IACA,yBACA;MACA;MACA;MACA;MACA;MACA;IACA,CARA;;IASAC;MACA;IACA,CAXA;;IAYA;IACA;MACA;MAEA;MACA;QACA;QAAA,EADA,CACA;;QACA;QACAC;QACA,cAJA,CAIA;MACA,CALA;MAMA;QACAC;MADA;IAGA,CA1BA;;IA2BA;IACA;MACA,6CACAC,+BADA;MAGA;MACA;QAAAR;MAAA;;MACA;QAAAS;QAAAC;MAAA;IACA,CAnCA;;IAoCA;IACAC;MACA;MACA;IACA,CAxCA;;IAyCA;IACAC;MACA;IACA;;EA5CA,CAvBA;EAqEAC;IACAC,WADA;IAEAC;EAFA,CArEA;EAyEAC;IACAC;MACA;MACA;QACA;UACA;QACA,CAFA,EADA,CAKA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CAXA;MAYA;IACA;;EAhBA;AAzEA","names":["getUserChannelsAPI","getAllChannelListAPI","updateChannelsAPI","removeTheChannelAPI","data","channelId","userChannelList","allChannelList","show","methods","plusClickFn","newObj","channels","obj","type","message","closeFn","moveSearchPageFn","components","ArticleList","channelEdit","computed","unCheckChannelList"],"sourceRoot":"src/views/Home","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 头部导航 -->\r\n    <div>\r\n      <van-nav-bar fixed>\r\n        <template v-slot:left>\r\n          <img src=\"@/assets/logo.png\" alt class=\"logo\" />\r\n        </template>\r\n        <template #right>\r\n          <van-icon name=\"search\" size=\"0.48rem\" color=\"#fff\" @click=\"moveSearchPageFn\" />\r\n        </template>\r\n      </van-nav-bar>\r\n    </div>\r\n    <!--标签栏 -->\r\n    <div class=\"main\">\r\n      <van-tabs\r\n        v-model=\"channelId\"\r\n        sticky\r\n        offset-top=\"1.22667rem\"\r\n        animated\r\n        @change=\"channelChangeFn\"\r\n      >\r\n        <van-tab :title=\"obj.name\" :key=\"obj.id\" v-for=\"obj in userChannelList\" :name=\"obj.id\">\r\n          <ArticleList :channelId=\"channelId\"></ArticleList>\r\n        </van-tab>\r\n      </van-tabs>\r\n\r\n      <!-- 编辑频道图标 -->\r\n      <van-icon name=\"plus\" size=\"0.37333334rem\" class=\"moreChannels\" @click=\"plusClickFn\" />\r\n    </div>\r\n\r\n    <!-- 频道管理弹出层 -->\r\n    <van-popup v-model=\"show\" get-container=\"body\" class=\"channel_popup\">\r\n      <!-- ref属性可以拿到当前绑定的组件对象，就可以拿到此组件对象身上的所有属性和方法 -->\r\n      <channel-edit\r\n        :userChannelList=\"userChannelList\"\r\n        :unCheckList=\"unCheckChannelList\"\r\n        @addChannelEV=\"addChannelFn\"\r\n        @removeChannelEV=\"removeChannelFn\"\r\n        @closeEV=\"closeFn\"\r\n        ref=\"editRef\"\r\n        v-model=\"channelId\"\r\n      ></channel-edit>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getUserChannelsAPI,\r\n  getAllChannelListAPI,\r\n  updateChannelsAPI,\r\n  removeTheChannelAPI\r\n} from \"@/api\";\r\nimport ArticleList from \"./components/ArticleList.vue\";\r\nimport channelEdit from \"./channelEdit.vue\";\r\nimport { Notify } from \"vant\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      channelId: 0,\r\n      userChannelList: [],\r\n      allChannelList: [],\r\n      show: false //控制频道弹出层显示或隐藏\r\n      // articleList: []\r\n    };\r\n  },\r\n  async created() {\r\n    const res = await getUserChannelsAPI();\r\n    // console.log(res);\r\n    this.userChannelList = res.data.data.channels;\r\n\r\n    const res2 = await getAllChannelListAPI();\r\n    // console.log(res2);\r\n    this.allChannelList = res2.data.data.channels;\r\n    // console.log(this.allChannelList);\r\n\r\n    // 请求文章列表\r\n    // this.channelChangeFn();\r\n  },\r\n  methods: {\r\n    async channelChangeFn() {\r\n      // const res2 = await getAllArticleAPI({\r\n      //   channel_id: this.channelId,\r\n      //   timestamp: new Date().getTime()\r\n      // });\r\n      // // console.log(res2);\r\n      // this.articleList = res2.data.data.results;\r\n    },\r\n    plusClickFn() {\r\n      this.show = true;\r\n    },\r\n    // 添加频道\r\n    async addChannelFn(channelObj) {\r\n      this.userChannelList.push(channelObj);\r\n\r\n      const newArr = this.userChannelList.filter(obj => obj.id !== 0);\r\n      const theNewArr = newArr.map((obj, index) => {\r\n        const newObj = { ...obj }; //拷贝\r\n        delete newObj.name;\r\n        newObj.seq = index;\r\n        return newObj; //让map把新对象收集起来\r\n      });\r\n      const res = await updateChannelsAPI({\r\n        channels: theNewArr\r\n      });\r\n    },\r\n    //用户移除已选频道\r\n    async removeChannelFn(channelObj) {\r\n      const index = this.userChannelList.findIndex(\r\n        obj => obj.id === channelObj.id\r\n      );\r\n      this.userChannelList.splice(index, 1);\r\n      const res = await removeTheChannelAPI({ channelId: channelObj.id });\r\n      Notify({ type: \"success\", message: \"删除成功\" });\r\n    },\r\n    // 关闭弹出层\r\n    closeFn() {\r\n      this.show = false;\r\n      this.$refs.editRef.isEdit = false;\r\n    },\r\n    // 首页-右上角放大镜点击事件--> 跳转至搜索页面\r\n    moveSearchPageFn() {\r\n      this.$router.push(\"/search\");\r\n    }\r\n  },\r\n  components: {\r\n    ArticleList,\r\n    channelEdit\r\n  },\r\n  computed: {\r\n    unCheckChannelList() {\r\n      // 把所有频道列表数组对象挨个取出，去用户已选频道数组里查找，如果查不到，让filter方法将其收集到一个新的数组中\r\n      const newArr = this.allChannelList.filter(bigObj => {\r\n        const index = this.userChannelList.findIndex(smallObj => {\r\n          return smallObj.id === bigObj.id;\r\n        });\r\n\r\n        // 如果找到了\r\n        if (index > -1) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n      return newArr;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logo {\r\n  width: 2.67rem;\r\n  height: 0.8rem;\r\n}\r\n.main {\r\n  padding-top: 1.22rem;\r\n}\r\n\r\n/* 设置tabs容器样式 */\r\n/deep/ .van-tabs_wrap {\r\n  padding-right: 30px;\r\n  background-color: #fff;\r\n}\r\n\r\n/* 设置小图标的样式 */\r\n.moreChannels {\r\n  position: fixed;\r\n  top: 1.65333333rem;\r\n  right: 0.08rem;\r\n  z-index: 999;\r\n}\r\n\r\n/* 频道弹出层样式 */\r\n.channel_popup {\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n</style>"]}]}