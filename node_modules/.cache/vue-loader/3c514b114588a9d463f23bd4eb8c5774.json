{"remainingRequest":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\forward\\code\\vue\\hmtt_nnew\\src\\views\\Home\\index.vue?vue&type=style&index=0&id=1d9b105c&scoped=true&lang=css&","dependencies":[{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\src\\views\\Home\\index.vue","mtime":1667458859753},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\css-loader\\dist\\cjs.js","mtime":1664795354518},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1664795355419},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\postcss-loader\\src\\index.js","mtime":1614782079830},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664795348110},{"path":"D:\\forward\\code\\vue\\hmtt_nnew\\node_modules\\vue-loader\\lib\\index.js","mtime":1664795355419}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9nbyB7DQogIHdpZHRoOiAyLjY3cmVtOw0KICBoZWlnaHQ6IDAuOHJlbTsNCn0NCi5tYWluIHsNCiAgcGFkZGluZy10b3A6IDEuMjJyZW07DQp9DQoNCi8qIOiuvue9rnRhYnPlrrnlmajmoLflvI8gKi8NCi9kZWVwLyAudmFuLXRhYnNfd3JhcCB7DQogIHBhZGRpbmctcmlnaHQ6IDMwcHg7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQp9DQoNCi8qIOiuvue9ruWwj+Wbvuagh+eahOagt+W8jyAqLw0KLm1vcmVDaGFubmVscyB7DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgdG9wOiAxLjY1MzMzMzMzcmVtOw0KICByaWdodDogMC4wOHJlbTsNCiAgei1pbmRleDogOTk5Ow0KfQ0KDQovKiDpopHpgZPlvLnlh7rlsYLmoLflvI8gKi8NCi5jaGFubmVsX3BvcHVwIHsNCiAgd2lkdGg6IDEwMHZ3Ow0KICBoZWlnaHQ6IDEwMHZoOw0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2LA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Home","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 头部导航 -->\r\n    <div>\r\n      <van-nav-bar fixed>\r\n        <template v-slot:left>\r\n          <img src=\"@/assets/logo.png\" alt class=\"logo\" />\r\n        </template>\r\n        <template #right>\r\n          <van-icon name=\"search\" size=\"0.48rem\" color=\"#fff\" @click=\"moveSearchPageFn\" />\r\n        </template>\r\n      </van-nav-bar>\r\n    </div>\r\n    <!--标签栏 -->\r\n    <div class=\"main\">\r\n      <van-tabs\r\n        v-model=\"channelId\"\r\n        sticky\r\n        offset-top=\"1.22667rem\"\r\n        animated\r\n        @change=\"channelChangeFn\"\r\n      >\r\n        <van-tab :title=\"obj.name\" :key=\"obj.id\" v-for=\"obj in userChannelList\" :name=\"obj.id\">\r\n          <ArticleList :channelId=\"channelId\"></ArticleList>\r\n        </van-tab>\r\n      </van-tabs>\r\n\r\n      <!-- 编辑频道图标 -->\r\n      <van-icon name=\"plus\" size=\"0.37333334rem\" class=\"moreChannels\" @click=\"plusClickFn\" />\r\n    </div>\r\n\r\n    <!-- 频道管理弹出层 -->\r\n    <van-popup v-model=\"show\" get-container=\"body\" class=\"channel_popup\">\r\n      <!-- ref属性可以拿到当前绑定的组件对象，就可以拿到此组件对象身上的所有属性和方法 -->\r\n      <channel-edit\r\n        :userChannelList=\"userChannelList\"\r\n        :unCheckList=\"unCheckChannelList\"\r\n        @addChannelEV=\"addChannelFn\"\r\n        @removeChannelEV=\"removeChannelFn\"\r\n        @closeEV=\"closeFn\"\r\n        ref=\"editRef\"\r\n        v-model=\"channelId\"\r\n      ></channel-edit>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getUserChannelsAPI,\r\n  getAllChannelListAPI,\r\n  updateChannelsAPI,\r\n  removeTheChannelAPI\r\n} from \"@/api\";\r\nimport ArticleList from \"./components/ArticleList.vue\";\r\nimport channelEdit from \"./channelEdit.vue\";\r\nimport Notify from \"@/ui/Notify.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      channelId: 0,\r\n      userChannelList: [],\r\n      allChannelList: [],\r\n      show: false, //控制频道弹出层显示或隐藏\r\n      // articleList: []\r\n      channelScrollTObj: {} //保存每个频道的滚动高度\r\n    };\r\n  },\r\n  async created() {\r\n    const res = await getUserChannelsAPI();\r\n    // console.log(res);\r\n    this.userChannelList = res.data.data.channels;\r\n\r\n    const res2 = await getAllChannelListAPI();\r\n    // console.log(res2);\r\n    this.allChannelList = res2.data.data.channels;\r\n    // console.log(this.allChannelList);\r\n\r\n    // 请求文章列表\r\n    // this.channelChangeFn();\r\n  },\r\n  methods: {\r\n    async channelChangeFn() {\r\n      // const res2 = await getAllArticleAPI({\r\n      //   channel_id: this.channelId,\r\n      //   timestamp: new Date().getTime()\r\n      // });\r\n      // // console.log(res2);\r\n      // this.articleList = res2.data.data.results;\r\n\r\n      //监听频道改变事件\r\n      // tab切换后，设置滚动条的位置\r\n      // tab切换时，组件内部会把切走的容器高度设置为0，切回来的一瞬间页面高度为0，滚动事件被触发，\r\n      // 滚动条滚回到顶部，把滚动条的数据变为0，设置滚动位置也没用。\r\n      // 解决：先让dom更新，再存\r\n      this.$nextTick(() => {\r\n        document.documentElement.scrollTop = this.channelScrollTObj[\r\n          this.channelId\r\n        ];\r\n      });\r\n    },\r\n    plusClickFn() {\r\n      this.show = true;\r\n    },\r\n    // 添加频道\r\n    async addChannelFn(channelObj) {\r\n      this.userChannelList.push(channelObj);\r\n\r\n      const newArr = this.userChannelList.filter(obj => obj.id !== 0);\r\n      const theNewArr = newArr.map((obj, index) => {\r\n        const newObj = { ...obj }; //拷贝\r\n        delete newObj.name;\r\n        newObj.seq = index;\r\n        return newObj; //让map把新对象收集起来\r\n      });\r\n      const res = await updateChannelsAPI({\r\n        channels: theNewArr\r\n      });\r\n    },\r\n    //用户移除已选频道\r\n    async removeChannelFn(channelObj) {\r\n      const index = this.userChannelList.findIndex(\r\n        obj => obj.id === channelObj.id\r\n      );\r\n      this.userChannelList.splice(index, 1);\r\n      const res = await removeTheChannelAPI({ channelId: channelObj.id });\r\n      Notify({ type: \"success\", message: \"删除成功\" });\r\n    },\r\n    // 关闭弹出层\r\n    closeFn() {\r\n      this.show = false;\r\n      this.$refs.editRef.isEdit = false;\r\n    },\r\n    // 首页-右上角放大镜点击事件--> 跳转至搜索页面\r\n    moveSearchPageFn() {\r\n      this.$router.push(\"/search\");\r\n    },\r\n    // 获取滚动条位置\r\n    scrollFn() {\r\n      // 谷歌浏览器和安卓手机内置的浏览器内核不是同一个，获取scrollTop的方式不同\r\n      // 谷歌浏览器用的html的scrollTop,安卓用的body的scrollTop\r\n      this.$route.meta.scrollT =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n      // 保存当前频道的滚动距离\r\n      this.channelScrollTObj[this.channelId] =\r\n        document.documentElement.scrollTop || document.body.scrollTop;\r\n    }\r\n  },\r\n  components: {\r\n    ArticleList,\r\n    channelEdit\r\n  },\r\n  computed: {\r\n    unCheckChannelList() {\r\n      // 把所有频道列表数组对象挨个取出，去用户已选频道数组里查找，如果查不到，让filter方法将其收集到一个新的数组中\r\n      const newArr = this.allChannelList.filter(bigObj => {\r\n        const index = this.userChannelList.findIndex(smallObj => {\r\n          return smallObj.id === bigObj.id;\r\n        });\r\n\r\n        // 如果找到了\r\n        if (index > -1) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n      return newArr;\r\n    }\r\n  },\r\n\r\n  // 有组件缓存，组件切回来时执行activated,组件切走时执行deactivated\r\n  activated() {\r\n    console.log(this.$route);\r\n    window.addEventListener(\"scroll\", this.scrollFn);\r\n    // window和document，监听网页滚动事件\r\n    // html标签获取scrollTop,滚动的距离和设置滚动的位置\r\n    // 立刻设置滚动条的位置\r\n    document.documentElement.scrollTop = this.$route.meta.scrollT;\r\n  },\r\n  deactivated() {\r\n    window.removeEventListener(\"scroll\", this.scrollFn);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logo {\r\n  width: 2.67rem;\r\n  height: 0.8rem;\r\n}\r\n.main {\r\n  padding-top: 1.22rem;\r\n}\r\n\r\n/* 设置tabs容器样式 */\r\n/deep/ .van-tabs_wrap {\r\n  padding-right: 30px;\r\n  background-color: #fff;\r\n}\r\n\r\n/* 设置小图标的样式 */\r\n.moreChannels {\r\n  position: fixed;\r\n  top: 1.65333333rem;\r\n  right: 0.08rem;\r\n  z-index: 999;\r\n}\r\n\r\n/* 频道弹出层样式 */\r\n.channel_popup {\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n</style>"]}]}